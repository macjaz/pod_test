// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/taikang/im/protobuf/Protocol.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#import <SakuraKit/Protocol.pbobjc.h>
#import <SakuraKit/ChatMessageReq.pbobjc.h>
#import <SakuraKit/ChatMessageReqAck.pbobjc.h>
#import <SakuraKit/ChatMessageNotify.pbobjc.h>
#import <SakuraKit/ChatMessageNotifyAck.pbobjc.h>
#import <SakuraKit/GroupMessageNotify.pbobjc.h>
#import <SakuraKit/GroupMessageNotifyAck.pbobjc.h>
#import <SakuraKit/GroupMessageReq.pbobjc.h>
#import <SakuraKit/GroupMessageReqAck.pbobjc.h>
#import <SakuraKit/HeartbeatReq.pbobjc.h>
#import <SakuraKit/HeartbeatReqAck.pbobjc.h>
#import <SakuraKit/ConnectReq.pbobjc.h>
#import <SakuraKit/ConnectReqAck.pbobjc.h>
#import <SakuraKit/DisconnectReq.pbobjc.h>
#import <SakuraKit/DisconnectNotify.pbobjc.h>
#import <SakuraKit/SystemMessageNotify.pbobjc.h>
#import <SakuraKit/ProtocolType.pbobjc.h>
#import <SakuraKit/CustomerMessageReq.pbobjc.h>
#import <SakuraKit/CustomerMessageReqNotify.pbobjc.h>
#import <SakuraKit/CustomerMessageReply.pbobjc.h>
#import <SakuraKit/CustomerMessageReplyNotify.pbobjc.h>
#import <SakuraKit/ReceiveStateMessageReq.pbobjc.h>
#import <SakuraKit/ReceiveStateMessageNotify.pbobjc.h>
#import <SakuraKit/SessionStateMessageReq.pbobjc.h>
#import <SakuraKit/SessionStateMessageNotify.pbobjc.h>
#import <SakuraKit/BroadcastMessage.pbobjc.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#import "Protocol.pbobjc.h"
#import "ChatMessageReq.pbobjc.h"
#import "ChatMessageReqAck.pbobjc.h"
#import "ChatMessageNotify.pbobjc.h"
#import "ChatMessageNotifyAck.pbobjc.h"
#import "GroupMessageNotify.pbobjc.h"
#import "GroupMessageNotifyAck.pbobjc.h"
#import "GroupMessageReq.pbobjc.h"
#import "GroupMessageReqAck.pbobjc.h"
#import "HeartbeatReq.pbobjc.h"
#import "HeartbeatReqAck.pbobjc.h"
#import "ConnectReq.pbobjc.h"
#import "ConnectReqAck.pbobjc.h"
#import "DisconnectReq.pbobjc.h"
#import "DisconnectNotify.pbobjc.h"
#import "SystemMessageNotify.pbobjc.h"
#import "ProtocolType.pbobjc.h"
#import "CustomerMessageReq.pbobjc.h"
#import "CustomerMessageReqNotify.pbobjc.h"
#import "CustomerMessageReply.pbobjc.h"
#import "CustomerMessageReplyNotify.pbobjc.h"
#import "ReceiveStateMessageReq.pbobjc.h"
#import "ReceiveStateMessageNotify.pbobjc.h"
#import "SessionStateMessageReq.pbobjc.h"
#import "SessionStateMessageNotify.pbobjc.h"
#import "BroadcastMessage.pbobjc.h"
#endif


// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - ProtocolRoot

@implementation ProtocolRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - ProtocolRoot_FileDescriptor

static GPBFileDescriptor *ProtocolRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Protocol_Class

@implementation Protocol_Class

@dynamic protocolType;
@dynamic hasChatMessageReq, chatMessageReq;
@dynamic hasChatMessageReqAck, chatMessageReqAck;
@dynamic hasChatMessageNotify, chatMessageNotify;
@dynamic hasGroupMessageNotify, groupMessageNotify;
@dynamic hasGroupMessageNotifyAck, groupMessageNotifyAck;
@dynamic hasGroupMessageReq, groupMessageReq;
@dynamic hasGroupMessageReqAck, groupMessageReqAck;
@dynamic hasHeartbeatReq, heartbeatReq;
@dynamic hasHeartbeatReqAck, heartbeatReqAck;
@dynamic hasConnectReq, connectReq;
@dynamic hasConnectReqAck, connectReqAck;
@dynamic hasDisconnectReq, disconnectReq;
@dynamic hasDisconnectNotify, disconnectNotify;
@dynamic hasSystemMessageNotify, systemMessageNotify;
@dynamic hasChatMessageNotifyAck, chatMessageNotifyAck;
@dynamic hasCustomerMessageReq, customerMessageReq;
@dynamic hasCustomerMessageReqNotify, customerMessageReqNotify;
@dynamic hasCustomerMessageReply, customerMessageReply;
@dynamic hasCustomerMessageReplyNotify, customerMessageReplyNotify;
@dynamic hasReceiveStateMessageReq, receiveStateMessageReq;
@dynamic hasReceiveStateMessageNotify, receiveStateMessageNotify;
@dynamic hasSessionStateMessageReq, sessionStateMessageReq;
@dynamic hasSessionStateMessageNotify, sessionStateMessageNotify;
@dynamic hasBroadcastMessage, broadcastMessage;

typedef struct Protocol_Class__storage_ {
  uint32_t _has_storage_[1];
  ProtocolType protocolType;
  ChatMessageReq *chatMessageReq;
  ChatMessageReqAck *chatMessageReqAck;
  ChatMessageNotify *chatMessageNotify;
  GroupMessageNotify *groupMessageNotify;
  GroupMessageNotifyAck *groupMessageNotifyAck;
  GroupMessageReq *groupMessageReq;
  GroupMessageReqAck *groupMessageReqAck;
  HeartbeatReq *heartbeatReq;
  HeartbeatReqAck *heartbeatReqAck;
  ConnectReq *connectReq;
  ConnectReqAck *connectReqAck;
  DisconnectReq *disconnectReq;
  DisconnectNotify *disconnectNotify;
  SystemMessageNotify *systemMessageNotify;
  ChatMessageNotifyAck *chatMessageNotifyAck;
  CustomerMessageReq *customerMessageReq;
  CustomerMessageReqNotify *customerMessageReqNotify;
  CustomerMessageReply *customerMessageReply;
  CustomerMessageReplyNotify *customerMessageReplyNotify;
  ReceiveStateMessageReq *receiveStateMessageReq;
  ReceiveStateMessageNotify *receiveStateMessageNotify;
  SessionStateMessageReq *sessionStateMessageReq;
  SessionStateMessageNotify *sessionStateMessageNotify;
  BroadcastMessage *broadcastMessage;
} Protocol_Class__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "protocolType",
        .dataTypeSpecific.enumDescFunc = ProtocolType_EnumDescriptor,
        .number = Protocol_Class_FieldNumber_ProtocolType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, protocolType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "chatMessageReq",
        .dataTypeSpecific.className = GPBStringifySymbol(ChatMessageReq),
        .number = Protocol_Class_FieldNumber_ChatMessageReq,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, chatMessageReq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "chatMessageReqAck",
        .dataTypeSpecific.className = GPBStringifySymbol(ChatMessageReqAck),
        .number = Protocol_Class_FieldNumber_ChatMessageReqAck,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, chatMessageReqAck),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "chatMessageNotify",
        .dataTypeSpecific.className = GPBStringifySymbol(ChatMessageNotify),
        .number = Protocol_Class_FieldNumber_ChatMessageNotify,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, chatMessageNotify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "groupMessageNotify",
        .dataTypeSpecific.className = GPBStringifySymbol(GroupMessageNotify),
        .number = Protocol_Class_FieldNumber_GroupMessageNotify,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, groupMessageNotify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "groupMessageNotifyAck",
        .dataTypeSpecific.className = GPBStringifySymbol(GroupMessageNotifyAck),
        .number = Protocol_Class_FieldNumber_GroupMessageNotifyAck,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, groupMessageNotifyAck),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "groupMessageReq",
        .dataTypeSpecific.className = GPBStringifySymbol(GroupMessageReq),
        .number = Protocol_Class_FieldNumber_GroupMessageReq,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, groupMessageReq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "groupMessageReqAck",
        .dataTypeSpecific.className = GPBStringifySymbol(GroupMessageReqAck),
        .number = Protocol_Class_FieldNumber_GroupMessageReqAck,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, groupMessageReqAck),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "heartbeatReq",
        .dataTypeSpecific.className = GPBStringifySymbol(HeartbeatReq),
        .number = Protocol_Class_FieldNumber_HeartbeatReq,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, heartbeatReq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "heartbeatReqAck",
        .dataTypeSpecific.className = GPBStringifySymbol(HeartbeatReqAck),
        .number = Protocol_Class_FieldNumber_HeartbeatReqAck,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, heartbeatReqAck),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "connectReq",
        .dataTypeSpecific.className = GPBStringifySymbol(ConnectReq),
        .number = Protocol_Class_FieldNumber_ConnectReq,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, connectReq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "connectReqAck",
        .dataTypeSpecific.className = GPBStringifySymbol(ConnectReqAck),
        .number = Protocol_Class_FieldNumber_ConnectReqAck,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, connectReqAck),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "disconnectReq",
        .dataTypeSpecific.className = GPBStringifySymbol(DisconnectReq),
        .number = Protocol_Class_FieldNumber_DisconnectReq,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, disconnectReq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "disconnectNotify",
        .dataTypeSpecific.className = GPBStringifySymbol(DisconnectNotify),
        .number = Protocol_Class_FieldNumber_DisconnectNotify,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, disconnectNotify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "systemMessageNotify",
        .dataTypeSpecific.className = GPBStringifySymbol(SystemMessageNotify),
        .number = Protocol_Class_FieldNumber_SystemMessageNotify,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, systemMessageNotify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "chatMessageNotifyAck",
        .dataTypeSpecific.className = GPBStringifySymbol(ChatMessageNotifyAck),
        .number = Protocol_Class_FieldNumber_ChatMessageNotifyAck,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, chatMessageNotifyAck),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "customerMessageReq",
        .dataTypeSpecific.className = GPBStringifySymbol(CustomerMessageReq),
        .number = Protocol_Class_FieldNumber_CustomerMessageReq,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, customerMessageReq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "customerMessageReqNotify",
        .dataTypeSpecific.className = GPBStringifySymbol(CustomerMessageReqNotify),
        .number = Protocol_Class_FieldNumber_CustomerMessageReqNotify,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, customerMessageReqNotify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "customerMessageReply",
        .dataTypeSpecific.className = GPBStringifySymbol(CustomerMessageReply),
        .number = Protocol_Class_FieldNumber_CustomerMessageReply,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, customerMessageReply),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "customerMessageReplyNotify",
        .dataTypeSpecific.className = GPBStringifySymbol(CustomerMessageReplyNotify),
        .number = Protocol_Class_FieldNumber_CustomerMessageReplyNotify,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, customerMessageReplyNotify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "receiveStateMessageReq",
        .dataTypeSpecific.className = GPBStringifySymbol(ReceiveStateMessageReq),
        .number = Protocol_Class_FieldNumber_ReceiveStateMessageReq,
        .hasIndex = 20,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, receiveStateMessageReq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "receiveStateMessageNotify",
        .dataTypeSpecific.className = GPBStringifySymbol(ReceiveStateMessageNotify),
        .number = Protocol_Class_FieldNumber_ReceiveStateMessageNotify,
        .hasIndex = 21,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, receiveStateMessageNotify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "sessionStateMessageReq",
        .dataTypeSpecific.className = GPBStringifySymbol(SessionStateMessageReq),
        .number = Protocol_Class_FieldNumber_SessionStateMessageReq,
        .hasIndex = 22,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, sessionStateMessageReq),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "sessionStateMessageNotify",
        .dataTypeSpecific.className = GPBStringifySymbol(SessionStateMessageNotify),
        .number = Protocol_Class_FieldNumber_SessionStateMessageNotify,
        .hasIndex = 23,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, sessionStateMessageNotify),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "broadcastMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(BroadcastMessage),
        .number = Protocol_Class_FieldNumber_BroadcastMessage,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(Protocol_Class__storage_, broadcastMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Protocol_Class class]
                                     rootClass:[ProtocolRoot class]
                                          file:ProtocolRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Protocol_Class__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\031\001\014\000\002\016\000\003\021\000\004\021\000\005\022\000\006\025\000\007\017\000\010\022\000\t\014\000\n\017\000\013\n\000\014\r\000\r\r\000"
        "\016\020\000\017\023\000\020\024\000\021\022\000\022\030\000\023\024\000\024\032\000\025\026\000\026\031\000\027\026\000\030\031\000\031\020\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    [localDescriptor setupMessageClassNameSuffix:@"_Class"];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t Protocol_Class_ProtocolType_RawValue(Protocol_Class *message) {
  GPBDescriptor *descriptor = [Protocol_Class descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:Protocol_Class_FieldNumber_ProtocolType];
  return GPBGetMessageInt32Field(message, field);
}

void SetProtocol_Class_ProtocolType_RawValue(Protocol_Class *message, int32_t value) {
  GPBDescriptor *descriptor = [Protocol_Class descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:Protocol_Class_FieldNumber_ProtocolType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
