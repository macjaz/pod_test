// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/taikang/im/protobuf/Protocol.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class BroadcastMessage;
@class ChatMessageNotify;
@class ChatMessageNotifyAck;
@class ChatMessageReq;
@class ChatMessageReqAck;
@class ConnectReq;
@class ConnectReqAck;
@class CustomerMessageReply;
@class CustomerMessageReplyNotify;
@class CustomerMessageReq;
@class CustomerMessageReqNotify;
@class DisconnectNotify;
@class DisconnectReq;
@class GroupMessageNotify;
@class GroupMessageNotifyAck;
@class GroupMessageReq;
@class GroupMessageReqAck;
@class HeartbeatReq;
@class HeartbeatReqAck;
@class ReceiveStateMessageNotify;
@class ReceiveStateMessageReq;
@class SessionStateMessageNotify;
@class SessionStateMessageReq;
@class SystemMessageNotify;
GPB_ENUM_FWD_DECLARE(ProtocolType);

NS_ASSUME_NONNULL_BEGIN

#pragma mark - ProtocolRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ProtocolRoot : GPBRootObject
@end

#pragma mark - Protocol_Class

typedef GPB_ENUM(Protocol_Class_FieldNumber) {
  Protocol_Class_FieldNumber_ProtocolType = 1,
  Protocol_Class_FieldNumber_ChatMessageReq = 2,
  Protocol_Class_FieldNumber_ChatMessageReqAck = 3,
  Protocol_Class_FieldNumber_ChatMessageNotify = 4,
  Protocol_Class_FieldNumber_GroupMessageNotify = 5,
  Protocol_Class_FieldNumber_GroupMessageNotifyAck = 6,
  Protocol_Class_FieldNumber_GroupMessageReq = 7,
  Protocol_Class_FieldNumber_GroupMessageReqAck = 8,
  Protocol_Class_FieldNumber_HeartbeatReq = 9,
  Protocol_Class_FieldNumber_HeartbeatReqAck = 10,
  Protocol_Class_FieldNumber_ConnectReq = 11,
  Protocol_Class_FieldNumber_ConnectReqAck = 12,
  Protocol_Class_FieldNumber_DisconnectReq = 13,
  Protocol_Class_FieldNumber_DisconnectNotify = 14,
  Protocol_Class_FieldNumber_SystemMessageNotify = 15,
  Protocol_Class_FieldNumber_ChatMessageNotifyAck = 16,
  Protocol_Class_FieldNumber_CustomerMessageReq = 17,
  Protocol_Class_FieldNumber_CustomerMessageReqNotify = 18,
  Protocol_Class_FieldNumber_CustomerMessageReply = 19,
  Protocol_Class_FieldNumber_CustomerMessageReplyNotify = 20,
  Protocol_Class_FieldNumber_ReceiveStateMessageReq = 21,
  Protocol_Class_FieldNumber_ReceiveStateMessageNotify = 22,
  Protocol_Class_FieldNumber_SessionStateMessageReq = 23,
  Protocol_Class_FieldNumber_SessionStateMessageNotify = 24,
  Protocol_Class_FieldNumber_BroadcastMessage = 25,
};

@interface Protocol_Class : GPBMessage

@property(nonatomic, readwrite) enum ProtocolType protocolType;

@property(nonatomic, readwrite, strong, null_resettable) ChatMessageReq *chatMessageReq;
/** Test to see if @c chatMessageReq has been set. */
@property(nonatomic, readwrite) BOOL hasChatMessageReq;

@property(nonatomic, readwrite, strong, null_resettable) ChatMessageReqAck *chatMessageReqAck;
/** Test to see if @c chatMessageReqAck has been set. */
@property(nonatomic, readwrite) BOOL hasChatMessageReqAck;

@property(nonatomic, readwrite, strong, null_resettable) ChatMessageNotify *chatMessageNotify;
/** Test to see if @c chatMessageNotify has been set. */
@property(nonatomic, readwrite) BOOL hasChatMessageNotify;

@property(nonatomic, readwrite, strong, null_resettable) GroupMessageNotify *groupMessageNotify;
/** Test to see if @c groupMessageNotify has been set. */
@property(nonatomic, readwrite) BOOL hasGroupMessageNotify;

@property(nonatomic, readwrite, strong, null_resettable) GroupMessageNotifyAck *groupMessageNotifyAck;
/** Test to see if @c groupMessageNotifyAck has been set. */
@property(nonatomic, readwrite) BOOL hasGroupMessageNotifyAck;

@property(nonatomic, readwrite, strong, null_resettable) GroupMessageReq *groupMessageReq;
/** Test to see if @c groupMessageReq has been set. */
@property(nonatomic, readwrite) BOOL hasGroupMessageReq;

@property(nonatomic, readwrite, strong, null_resettable) GroupMessageReqAck *groupMessageReqAck;
/** Test to see if @c groupMessageReqAck has been set. */
@property(nonatomic, readwrite) BOOL hasGroupMessageReqAck;

@property(nonatomic, readwrite, strong, null_resettable) HeartbeatReq *heartbeatReq;
/** Test to see if @c heartbeatReq has been set. */
@property(nonatomic, readwrite) BOOL hasHeartbeatReq;

@property(nonatomic, readwrite, strong, null_resettable) HeartbeatReqAck *heartbeatReqAck;
/** Test to see if @c heartbeatReqAck has been set. */
@property(nonatomic, readwrite) BOOL hasHeartbeatReqAck;

@property(nonatomic, readwrite, strong, null_resettable) ConnectReq *connectReq;
/** Test to see if @c connectReq has been set. */
@property(nonatomic, readwrite) BOOL hasConnectReq;

@property(nonatomic, readwrite, strong, null_resettable) ConnectReqAck *connectReqAck;
/** Test to see if @c connectReqAck has been set. */
@property(nonatomic, readwrite) BOOL hasConnectReqAck;

@property(nonatomic, readwrite, strong, null_resettable) DisconnectReq *disconnectReq;
/** Test to see if @c disconnectReq has been set. */
@property(nonatomic, readwrite) BOOL hasDisconnectReq;

@property(nonatomic, readwrite, strong, null_resettable) DisconnectNotify *disconnectNotify;
/** Test to see if @c disconnectNotify has been set. */
@property(nonatomic, readwrite) BOOL hasDisconnectNotify;

@property(nonatomic, readwrite, strong, null_resettable) SystemMessageNotify *systemMessageNotify;
/** Test to see if @c systemMessageNotify has been set. */
@property(nonatomic, readwrite) BOOL hasSystemMessageNotify;

@property(nonatomic, readwrite, strong, null_resettable) ChatMessageNotifyAck *chatMessageNotifyAck;
/** Test to see if @c chatMessageNotifyAck has been set. */
@property(nonatomic, readwrite) BOOL hasChatMessageNotifyAck;

@property(nonatomic, readwrite, strong, null_resettable) CustomerMessageReq *customerMessageReq;
/** Test to see if @c customerMessageReq has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerMessageReq;

@property(nonatomic, readwrite, strong, null_resettable) CustomerMessageReqNotify *customerMessageReqNotify;
/** Test to see if @c customerMessageReqNotify has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerMessageReqNotify;

@property(nonatomic, readwrite, strong, null_resettable) CustomerMessageReply *customerMessageReply;
/** Test to see if @c customerMessageReply has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerMessageReply;

@property(nonatomic, readwrite, strong, null_resettable) CustomerMessageReplyNotify *customerMessageReplyNotify;
/** Test to see if @c customerMessageReplyNotify has been set. */
@property(nonatomic, readwrite) BOOL hasCustomerMessageReplyNotify;

@property(nonatomic, readwrite, strong, null_resettable) ReceiveStateMessageReq *receiveStateMessageReq;
/** Test to see if @c receiveStateMessageReq has been set. */
@property(nonatomic, readwrite) BOOL hasReceiveStateMessageReq;

@property(nonatomic, readwrite, strong, null_resettable) ReceiveStateMessageNotify *receiveStateMessageNotify;
/** Test to see if @c receiveStateMessageNotify has been set. */
@property(nonatomic, readwrite) BOOL hasReceiveStateMessageNotify;

@property(nonatomic, readwrite, strong, null_resettable) SessionStateMessageReq *sessionStateMessageReq;
/** Test to see if @c sessionStateMessageReq has been set. */
@property(nonatomic, readwrite) BOOL hasSessionStateMessageReq;

@property(nonatomic, readwrite, strong, null_resettable) SessionStateMessageNotify *sessionStateMessageNotify;
/** Test to see if @c sessionStateMessageNotify has been set. */
@property(nonatomic, readwrite) BOOL hasSessionStateMessageNotify;

@property(nonatomic, readwrite, strong, null_resettable) BroadcastMessage *broadcastMessage;
/** Test to see if @c broadcastMessage has been set. */
@property(nonatomic, readwrite) BOOL hasBroadcastMessage;

@end

/**
 * Fetches the raw value of a @c Protocol_Class's @c protocolType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Protocol_Class_ProtocolType_RawValue(Protocol_Class *message);
/**
 * Sets the raw value of an @c Protocol_Class's @c protocolType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetProtocol_Class_ProtocolType_RawValue(Protocol_Class *message, int32_t value);

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
