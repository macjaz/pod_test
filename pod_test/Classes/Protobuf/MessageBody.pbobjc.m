// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com/taikang/im/protobuf/message/MessageBody.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#import <SakuraKit/MessageBody.pbobjc.h>
#import <SakuraKit/MessageType.pbobjc.h>
#import <SakuraKit/ImageMessage.pbobjc.h>
#import <SakuraKit/TextMessage.pbobjc.h>
#import <SakuraKit/VoiceMessage.pbobjc.h>
#import <SakuraKit/VideoMessage.pbobjc.h>
#import <SakuraKit/ShortVideoMessage.pbobjc.h>
#import <SakuraKit/NewsMessage.pbobjc.h>
#import <SakuraKit/FileMessage.pbobjc.h>
#import <SakuraKit/CustomMessage.pbobjc.h>
#import <SakuraKit/SystemMessage.pbobjc.h>
#import <SakuraKit/RecallMessage.pbobjc.h>
#import <SakuraKit/RemindMessage.pbobjc.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#import "MessageBody.pbobjc.h"
#import "MessageType.pbobjc.h"
#import "ImageMessage.pbobjc.h"
#import "TextMessage.pbobjc.h"
#import "VoiceMessage.pbobjc.h"
#import "VideoMessage.pbobjc.h"
#import "ShortVideoMessage.pbobjc.h"
#import "NewsMessage.pbobjc.h"
#import "FileMessage.pbobjc.h"
#import "CustomMessage.pbobjc.h"
#import "SystemMessage.pbobjc.h"
#import "RecallMessage.pbobjc.h"
#import "RemindMessage.pbobjc.h"
#endif


// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MessageBodyRoot

@implementation MessageBodyRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - MessageBodyRoot_FileDescriptor

static GPBFileDescriptor *MessageBodyRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - MessageBody

@implementation MessageBody

@dynamic messageType;
@dynamic hasTextMessage, textMessage;
@dynamic hasImageMessage, imageMessage;
@dynamic hasVoiceMessage, voiceMessage;
@dynamic hasVideoMessage, videoMessage;
@dynamic hasShortVideoMessage, shortVideoMessage;
@dynamic hasNewsMessage, newsMessage;
@dynamic hasFileMessage, fileMessage;
@dynamic hasCustomMessage, customMessage;
@dynamic hasSystemMessage, systemMessage;
@dynamic hasRecallMessage, recallMessage;
@dynamic extra;
@dynamic notifyPassThrough;
@dynamic hasRemindMessage, remindMessage;
@dynamic requestEvent;

typedef struct MessageBody__storage_ {
  uint32_t _has_storage_[1];
  MessageType messageType;
  int32_t requestEvent;
  TextMessage *textMessage;
  ImageMessage *imageMessage;
  VoiceMessage *voiceMessage;
  VideoMessage *videoMessage;
  ShortVideoMessage *shortVideoMessage;
  NewsMessage *newsMessage;
  FileMessage *fileMessage;
  CustomMessage *customMessage;
  SystemMessage *systemMessage;
  RecallMessage *recallMessage;
  NSString *extra;
  RemindMessage *remindMessage;
} MessageBody__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "messageType",
        .dataTypeSpecific.enumDescFunc = MessageType_EnumDescriptor,
        .number = MessageBody_FieldNumber_MessageType,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(MessageBody__storage_, messageType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "textMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(TextMessage),
        .number = MessageBody_FieldNumber_TextMessage,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(MessageBody__storage_, textMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "imageMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(ImageMessage),
        .number = MessageBody_FieldNumber_ImageMessage,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(MessageBody__storage_, imageMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "voiceMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(VoiceMessage),
        .number = MessageBody_FieldNumber_VoiceMessage,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(MessageBody__storage_, voiceMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "videoMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(VideoMessage),
        .number = MessageBody_FieldNumber_VideoMessage,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(MessageBody__storage_, videoMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "shortVideoMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(ShortVideoMessage),
        .number = MessageBody_FieldNumber_ShortVideoMessage,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(MessageBody__storage_, shortVideoMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "newsMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(NewsMessage),
        .number = MessageBody_FieldNumber_NewsMessage,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(MessageBody__storage_, newsMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "fileMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(FileMessage),
        .number = MessageBody_FieldNumber_FileMessage,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(MessageBody__storage_, fileMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "customMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(CustomMessage),
        .number = MessageBody_FieldNumber_CustomMessage,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(MessageBody__storage_, customMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "systemMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(SystemMessage),
        .number = MessageBody_FieldNumber_SystemMessage,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(MessageBody__storage_, systemMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "recallMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(RecallMessage),
        .number = MessageBody_FieldNumber_RecallMessage,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(MessageBody__storage_, recallMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "extra",
        .dataTypeSpecific.className = NULL,
        .number = MessageBody_FieldNumber_Extra,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(MessageBody__storage_, extra),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "notifyPassThrough",
        .dataTypeSpecific.className = NULL,
        .number = MessageBody_FieldNumber_NotifyPassThrough,
        .hasIndex = 12,
        .offset = 13,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "remindMessage",
        .dataTypeSpecific.className = GPBStringifySymbol(RemindMessage),
        .number = MessageBody_FieldNumber_RemindMessage,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(MessageBody__storage_, remindMessage),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "requestEvent",
        .dataTypeSpecific.className = NULL,
        .number = MessageBody_FieldNumber_RequestEvent,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(MessageBody__storage_, requestEvent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[MessageBody class]
                                     rootClass:[MessageBodyRoot class]
                                          file:MessageBodyRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(MessageBody__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\016\001\013\000\002\013\000\003\014\000\004\014\000\005\014\000\006\021\000\007\013\000\010\013\000\t\r\000\n\r\000\013\r\000\r\021\000\016\r\000"
        "\017\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t MessageBody_MessageType_RawValue(MessageBody *message) {
  GPBDescriptor *descriptor = [MessageBody descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:MessageBody_FieldNumber_MessageType];
  return GPBGetMessageInt32Field(message, field);
}

void SetMessageBody_MessageType_RawValue(MessageBody *message, int32_t value) {
  GPBDescriptor *descriptor = [MessageBody descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:MessageBody_FieldNumber_MessageType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
